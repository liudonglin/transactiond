// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RpcMessage.proto

package txmsg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactionModel int32

const (
	// tcc事务模式
	TransactionModel_TCC TransactionModel = 0
	// lcn事务模式
	TransactionModel_LCN TransactionModel = 1
)

var TransactionModel_name = map[int32]string{
	0: "TCC",
	1: "LCN",
}

var TransactionModel_value = map[string]int32{
	"TCC": 0,
	"LCN": 1,
}

func (x TransactionModel) String() string {
	return proto.EnumName(TransactionModel_name, int32(x))
}

func (TransactionModel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a49baf2e5143a5e0, []int{0}
}

type ResponseMessage struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseMessage) Reset()         { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()    {}
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49baf2e5143a5e0, []int{0}
}

func (m *ResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseMessage.Unmarshal(m, b)
}
func (m *ResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseMessage.Marshal(b, m, deterministic)
}
func (m *ResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMessage.Merge(m, src)
}
func (m *ResponseMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseMessage.Size(m)
}
func (m *ResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMessage proto.InternalMessageInfo

func (m *ResponseMessage) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CreateGroupMessage struct {
	GroupId              string   `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGroupMessage) Reset()         { *m = CreateGroupMessage{} }
func (m *CreateGroupMessage) String() string { return proto.CompactTextString(m) }
func (*CreateGroupMessage) ProtoMessage()    {}
func (*CreateGroupMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49baf2e5143a5e0, []int{1}
}

func (m *CreateGroupMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupMessage.Unmarshal(m, b)
}
func (m *CreateGroupMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupMessage.Marshal(b, m, deterministic)
}
func (m *CreateGroupMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupMessage.Merge(m, src)
}
func (m *CreateGroupMessage) XXX_Size() int {
	return xxx_messageInfo_CreateGroupMessage.Size(m)
}
func (m *CreateGroupMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupMessage proto.InternalMessageInfo

func (m *CreateGroupMessage) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

type JoinGroupMessage struct {
	GroupId              string           `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UnitId               string           `protobuf:"bytes,2,opt,name=unitId,proto3" json:"unitId,omitempty"`
	Model                TransactionModel `protobuf:"varint,3,opt,name=model,proto3,enum=txmsg.TransactionModel" json:"model,omitempty"`
	State                int32            `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JoinGroupMessage) Reset()         { *m = JoinGroupMessage{} }
func (m *JoinGroupMessage) String() string { return proto.CompactTextString(m) }
func (*JoinGroupMessage) ProtoMessage()    {}
func (*JoinGroupMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a49baf2e5143a5e0, []int{2}
}

func (m *JoinGroupMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinGroupMessage.Unmarshal(m, b)
}
func (m *JoinGroupMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinGroupMessage.Marshal(b, m, deterministic)
}
func (m *JoinGroupMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinGroupMessage.Merge(m, src)
}
func (m *JoinGroupMessage) XXX_Size() int {
	return xxx_messageInfo_JoinGroupMessage.Size(m)
}
func (m *JoinGroupMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinGroupMessage.DiscardUnknown(m)
}

var xxx_messageInfo_JoinGroupMessage proto.InternalMessageInfo

func (m *JoinGroupMessage) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *JoinGroupMessage) GetUnitId() string {
	if m != nil {
		return m.UnitId
	}
	return ""
}

func (m *JoinGroupMessage) GetModel() TransactionModel {
	if m != nil {
		return m.Model
	}
	return TransactionModel_TCC
}

func (m *JoinGroupMessage) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func init() {
	proto.RegisterEnum("txmsg.TransactionModel", TransactionModel_name, TransactionModel_value)
	proto.RegisterType((*ResponseMessage)(nil), "txmsg.ResponseMessage")
	proto.RegisterType((*CreateGroupMessage)(nil), "txmsg.CreateGroupMessage")
	proto.RegisterType((*JoinGroupMessage)(nil), "txmsg.JoinGroupMessage")
}

func init() {
	proto.RegisterFile("RpcMessage.proto", fileDescriptor_a49baf2e5143a5e0)
}

var fileDescriptor_a49baf2e5143a5e0 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xff, 0xdb, 0x36, 0x2d, 0x9d, 0x3f, 0x6a, 0x18, 0xa4, 0x46, 0x4f, 0x21, 0x28, 0x04,
	0xc1, 0x1c, 0xea, 0xd5, 0x83, 0x98, 0x83, 0x54, 0x8c, 0xc8, 0xda, 0x2f, 0xb0, 0x6e, 0x86, 0x10,
	0xb1, 0xbb, 0x61, 0x77, 0x2b, 0x7e, 0x05, 0x4f, 0x7e, 0x65, 0x49, 0xba, 0x41, 0x88, 0x08, 0xde,
	0xe6, 0xf1, 0xde, 0xb0, 0x6f, 0x7f, 0x03, 0x21, 0x6f, 0x64, 0x41, 0xd6, 0x8a, 0x8a, 0xb2, 0xc6,
	0x68, 0xa7, 0x31, 0x70, 0xef, 0x1b, 0x5b, 0x25, 0x67, 0x70, 0xc0, 0xc9, 0x36, 0x5a, 0x59, 0xf2,
	0x3e, 0x22, 0x4c, 0xa4, 0x2e, 0x29, 0x62, 0x31, 0x4b, 0xe7, 0xbc, 0x9b, 0x93, 0x0c, 0x30, 0x37,
	0x24, 0x1c, 0xdd, 0x1a, 0xbd, 0x6d, 0xfa, 0x64, 0x04, 0xb3, 0xaa, 0xd5, 0xab, 0xd2, 0x87, 0x7b,
	0x99, 0x7c, 0x30, 0x08, 0xef, 0x74, 0xad, 0xfe, 0x16, 0xc7, 0x05, 0x4c, 0xb7, 0xaa, 0x76, 0xab,
	0x32, 0x1a, 0x75, 0x86, 0x57, 0x78, 0x01, 0xc1, 0x46, 0x97, 0xf4, 0x1a, 0x8d, 0x63, 0x96, 0xee,
	0x2f, 0x8f, 0xb2, 0xae, 0x74, 0xb6, 0x36, 0x42, 0x59, 0x21, 0x5d, 0xad, 0x55, 0xd1, 0xda, 0x7c,
	0x97, 0xc2, 0x43, 0x08, 0xac, 0x13, 0x8e, 0xa2, 0x49, 0xcc, 0xd2, 0x80, 0xef, 0xc4, 0xf9, 0x29,
	0x84, 0xc3, 0x05, 0x9c, 0xc1, 0x78, 0x9d, 0xe7, 0xe1, 0xbf, 0x76, 0xb8, 0xcf, 0x1f, 0x42, 0xb6,
	0xfc, 0x64, 0xb0, 0x57, 0x08, 0x25, 0x2a, 0x7a, 0x22, 0xf3, 0x56, 0x4b, 0xc2, 0x6b, 0xf8, 0x2f,
	0xbf, 0xff, 0x8c, 0xc7, 0xfe, 0xf1, 0x9f, 0x1c, 0x4e, 0x16, 0xde, 0x1a, 0x92, 0xbc, 0x82, 0xf9,
	0x4b, 0x0f, 0x01, 0xfb, 0xf2, 0x43, 0x2c, 0xbf, 0x6d, 0xdf, 0x8c, 0x1e, 0xd9, 0xf3, 0xb4, 0x3b,
	0xd6, 0xe5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0xeb, 0x18, 0x6a, 0xc0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManageServiceClient is the client API for ManageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManageServiceClient interface {
	CreateGroup(ctx context.Context, in *CreateGroupMessage, opts ...grpc.CallOption) (*ResponseMessage, error)
	JoinGroup(ctx context.Context, in *JoinGroupMessage, opts ...grpc.CallOption) (*ResponseMessage, error)
}

type manageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewManageServiceClient(cc grpc.ClientConnInterface) ManageServiceClient {
	return &manageServiceClient{cc}
}

func (c *manageServiceClient) CreateGroup(ctx context.Context, in *CreateGroupMessage, opts ...grpc.CallOption) (*ResponseMessage, error) {
	out := new(ResponseMessage)
	err := c.cc.Invoke(ctx, "/txmsg.ManageService/createGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *manageServiceClient) JoinGroup(ctx context.Context, in *JoinGroupMessage, opts ...grpc.CallOption) (*ResponseMessage, error) {
	out := new(ResponseMessage)
	err := c.cc.Invoke(ctx, "/txmsg.ManageService/joinGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManageServiceServer is the server API for ManageService service.
type ManageServiceServer interface {
	CreateGroup(context.Context, *CreateGroupMessage) (*ResponseMessage, error)
	JoinGroup(context.Context, *JoinGroupMessage) (*ResponseMessage, error)
}

// UnimplementedManageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedManageServiceServer struct {
}

func (*UnimplementedManageServiceServer) CreateGroup(ctx context.Context, req *CreateGroupMessage) (*ResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedManageServiceServer) JoinGroup(ctx context.Context, req *JoinGroupMessage) (*ResponseMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGroup not implemented")
}

func RegisterManageServiceServer(s *grpc.Server, srv ManageServiceServer) {
	s.RegisterService(&_ManageService_serviceDesc, srv)
}

func _ManageService_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageServiceServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txmsg.ManageService/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageServiceServer).CreateGroup(ctx, req.(*CreateGroupMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManageService_JoinGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinGroupMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManageServiceServer).JoinGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txmsg.ManageService/JoinGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManageServiceServer).JoinGroup(ctx, req.(*JoinGroupMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "txmsg.ManageService",
	HandlerType: (*ManageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createGroup",
			Handler:    _ManageService_CreateGroup_Handler,
		},
		{
			MethodName: "joinGroup",
			Handler:    _ManageService_JoinGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "RpcMessage.proto",
}
